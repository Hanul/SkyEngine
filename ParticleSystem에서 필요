let draw;
			OVERRIDE(self.draw, (origin) => {
				
				draw = self.draw = (context) => {
					
					for (let i = 0; i < particleInfos.length; i += 1) {
						
						let particleInfo = particleInfos[i];
						
						let scale = particleInfo.scale;
						
						context.save();
						
						context.translate(particleInfo.x, particleInfo.y);
						
						if (isParticleAngleToDirection === true) {
							context.rotate(particleInfo.direction);
						} else {
							context.rotate(particleInfo.radian);
						}
						
						context.scale(scale, scale);
						
						context.globalAlpha *= particleInfo.alpha;
						
						if (particleFigure === undefined) {
							
							context.drawImage(
								img,
								particleCenterX - width / 2,
								particleCenterY - height / 2,
								width,
								height);
						}
						
						else {
							
							context.beginPath();
							
							if (particleFigure === 'line') {
								context.moveTo(particleCenterX + particleStartX, particleCenterY + particleStartY);
								context.lineTo(particleCenterX + particleEndX, particleCenterY + particleEndY);
							}
							
							else if (particleFigure === 'rect') {
								context.rect(particleCenterX - particleWidth / 2, particleCenterX - particleHeight / 2, particleWidth, particleHeight);
							}
							
							else if (particleFigure === 'circle') {
								context.ellipse(particleCenterX, particleCenterY, particleWidth / 2, particleHeight / 2, 0, 0, 2 * Math.PI);
							}
							
							else if (particleFigure === 'polygon') {
								
								if (particlePoints.length > 0) {
									
									context.moveTo(particleCenterX + particlePoints[0].x, particleCenterY + particlePoints[0].y);
									
									for (let i = 1; i < particlePoints.length; i += 1) {
										let point = particlePoints[i];
										context.lineTo(particleCenterX + point.x, particleCenterY + point.y);
									}
									
									context.lineTo(particleCenterX + particlePoints[0].x, particleCenterY + particlePoints[0].y);
								}
							}
							
							if (particleColor !== undefined) {
								context.fillStyle = particleColor;
								context.fill();
							}
							
							else if (particleInfo.color !== undefined) {
								context.fillStyle = particleInfo.color;
								context.fill();
							}
							
							if (particleBorder !== undefined) {
								context.lineWidth = particleBorderPixel;
								context.strokeStyle = particleBorderColor;
								
								if (particleBorderStyle === 'dashed') {
									context.setLineDash([5]);
								} else if (particleBorderStyle === 'dotted') {
									context.setLineDash([2]);
								}
								
								context.stroke();
							}
							
							context.closePath();
						}
						
						context.restore();
					}
					
					origin(context);
				};
			});